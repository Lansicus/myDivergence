
# General
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
Icon?
ehthumbs.db
Thumbs.db

# Compiled files
*.com
*.class
*.dll
*.exe
*.o
*.so
*.pyc
*.pyo
*.dll
*.out

# Logs and databases
*.log
*.sql
*.sqlite
*.sqlite3
*.db

# Temporary files
*.swp
*~
*.bak
*.backup
*.tmp

# Build files
/build/
/dist/
/node_modules/
/bower_components/

# IDE and editor files
.idea/
.vscode/
*.sublime-project
*.sublime-workspace
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw*
*.suo
*.user
*.userosscache
*.sln.docstates

# Dependency directories
/vendor/
/node_modules/
/bower_components/

# Compiled Python files
__pycache__/

# Environment configuration files
.env

# macOS
.DS_Store

# Windows
Thumbs.db

# Terraform
# Local .terraform directories
**/.terraform/*

# .tfstate files
*.tfstate
*.tfstate.*

# Crash log files
crash.log
crash.*.log

# Exclude all .tfvars files, which are likely to contain sensitive data, such as
# password, private keys, and other secrets. These should not be part of version 
# control as they are data points which are potentially sensitive and subject 
# to change depending on the environment.
*.tfvars
*.tfvars.json

# Ignore override files as they are usually used to override resources locally and so
# are not checked in
override.tf
override.tf.json
*_override.tf
*_override.tf.json

# Include override files you do wish to add to version control using negated pattern
# !example_override.tf

# Include tfplan files to ignore the plan output of command: terraform plan -out=tfplan
# example: *tfplan*

# Ignore CLI configuration files
.terraformrc
terraform.rc
/terraform
/Terraform
